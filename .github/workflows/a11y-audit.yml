name: Accessibility Audit

on:
  # Executa em pushes para main
  push:
    branches: [main]
  # Executa em PRs para main
  pull_request:
    branches: [main]
  # Permite execu√ß√£o manual
  workflow_dispatch:
  # Executa semanalmente para monitoramento cont√≠nuo
  schedule:
    - cron: '0 0 * * 3' # Toda quarta-feira √† meia-noite

jobs:
  a11y-audit:
    name: Accessibility Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar depend√™ncias
        run: npm ci

      - name: Instalar Playwright
        run: npx playwright install --with-deps chromium

      - name: Iniciar servidor
        run: |
          npm install -g serve
          serve -s src -l 5000 --single &
          sleep 5

      - name: Executar testes de acessibilidade
        id: a11y
        run: |
          # Executa apenas o teste de acessibilidade
          npx playwright test tests/accessibility.spec.ts --reporter=json > a11y-results.json || true

          # Verifica se o arquivo existe
          if [ -f "a11y-results.json" ]; then
            echo "::set-output name=result::$(cat a11y-results.json)"
            
            # Conta viola√ß√µes
            VIOLATIONS=$(cat a11y-results.json | grep -o "violations" | wc -l)
            echo "::set-output name=violations::$VIOLATIONS"
          else
            echo "::set-output name=result::Error: No results file"
            echo "::set-output name=violations::0"
          fi

      - name: Armazenar resultados como artefato
        uses: actions/upload-artifact@v3
        with:
          name: a11y-results
          path: |
            a11y-results.json
            test-results/
          retention-days: 14

      - name: Gerar relat√≥rio de acessibilidade
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const violations = ${{ steps.a11y.outputs.violations }};

            let reportBody = `## üßê Relat√≥rio de Acessibilidade\n\n`;

            if (violations > 0) {
              reportBody += `‚ö†Ô∏è **${violations} viola√ß√µes de acessibilidade encontradas**\n\n`;
              reportBody += `Por favor, verifique os artefatos da execu√ß√£o para detalhes completos.\n\n`;
              reportBody += `### Pr√≥ximos Passos\n\n`;
              reportBody += `1. Baixe os artefatos da execu√ß√£o\n`;
              reportBody += `2. Analise as viola√ß√µes reportadas\n`;
              reportBody += `3. Corrija os problemas antes de mesclar\n\n`;
              reportBody += `Lembre-se: Um site acess√≠vel √© um site melhor para todos os usu√°rios!`;
            } else {
              reportBody += `‚úÖ **Nenhuma viola√ß√£o de acessibilidade encontrada!**\n\n`;
              reportBody += `Parab√©ns por manter altos padr√µes de acessibilidade.`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reportBody
            });

      - name: Criar issue para viola√ß√µes de acessibilidade
        if: ${{ steps.a11y.outputs.violations > 0 && (github.event_name == 'push' || github.event_name == 'schedule') }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const violations = ${{ steps.a11y.outputs.violations }};

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® Alerta de Acessibilidade: ${violations} viola√ß√µes encontradas`,
              body: `## Alerta de Acessibilidade

              Foram encontradas ${violations} viola√ß√µes de acessibilidade na √∫ltima execu√ß√£o de testes.

              ### üîç Detalhes

              Os resultados detalhados est√£o dispon√≠veis nos artefatos da execu√ß√£o do workflow.

              ### Pr√≥ximos Passos

              1. Analise os artefatos da execu√ß√£o
              2. Identifique as viola√ß√µes espec√≠ficas
              3. Corrija os problemas de acessibilidade
              4. Execute novamente os testes para verificar as corre√ß√µes

              A acessibilidade √© fundamental para garantir que nosso site seja utiliz√°vel por todos.
              `,
              labels: ['accessibility', 'bug', 'automated']
            });
