name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Trabalho de teste - executa os testes automatizados
  test:
    name: Testes Automatizados
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do c√≥digo
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      # Passo 2: Configura√ß√£o do Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Passo 3: Instala√ß√£o de depend√™ncias
      - name: Instalar depend√™ncias
        run: npm ci

      # Passo 4: Instala√ß√£o dos navegadores do Playwright (apenas Chromium)
      - name: Instalar navegadores Playwright
        run: npx playwright install --with-deps chromium

      # Passo 5: Execu√ß√£o dos testes
      - name: Executar testes
        run: npm run test

      # Passo 6: Armazenar relat√≥rios de teste como artefatos
      - name: Armazenar relat√≥rios de teste
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/
          retention-days: 7

  # Trabalho de linting - verifica a qualidade do c√≥digo
  lint:
    name: Linting e Formata√ß√£o
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar depend√™ncias
        run: npm ci

      - name: Verificar formata√ß√£o com Prettier
        run: npx prettier --check .

      - name: Executar ESLint
        run: npx eslint . --ext .js,.ts

  # Trabalho de verifica√ß√£o final - garante que o c√≥digo est√° pronto para deploy
  verify:
    name: Verifica√ß√£o Final
    needs: [test, lint]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar depend√™ncias
        run: npm ci

      # Verifica√ß√£o final antes do deploy autom√°tico do Cloudflare
      - name: Verificar estrutura do projeto
        run: |
          echo "‚úÖ Verifica√ß√£o final conclu√≠da"
          echo "‚ÑπÔ∏è O deploy ser√° realizado automaticamente pelo Cloudflare Pages"
          echo "‚ÑπÔ∏è Cloudflare Pages est√° configurado para monitorar a branch main"

      # Notificar sobre o in√≠cio do deploy
      - name: Notificar sobre deploy
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = context.sha.substring(0, 7);
            const message = `## üöÄ Deploy Iniciado\n\nA verifica√ß√£o de CI foi conclu√≠da com sucesso para o commit \`${sha}\`.\n\nO Cloudflare Pages iniciar√° automaticamente o processo de deploy.`;

            // Criar um coment√°rio no commit
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: message
            });
